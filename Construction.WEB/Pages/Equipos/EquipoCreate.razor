@page "/equipos/create"
@inject IRepository repository
@inject NavigationManager navegationManager
@inject SweetAlertService sweetAlertService

<h3>EquipoCreate</h3>
<EquipoForm @ref="equipoForm" Equipo="equipo" OnSubmit="Create" ReturnAction="Return" />

@code {
    private Equipo equipo = new();
    private EquipoForm equipoForm;

    private async Task Create()
    {
        var responseHttp = await repository.PostAsync("/api/equipos", equipo);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message);
            return;
        }

        Return();
        var toast = sweetAlertService.Mixin(new SweetAlertOptions
            {
                Toast = true,
                Position = SweetAlertPosition.BottomEnd,
                ShowConfirmButton = true,
                Timer = 3000

            });

        await toast.FireAsync(icon: SweetAlertIcon.Success, message: "Registro creado con éxito");
    }

    private void Return()
    {
        navegationManager.NavigateTo("/equipos");
    }
}
